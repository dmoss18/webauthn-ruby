# frozen_string_literal: true

require 'spec_helper'

require 'json'
require 'openssl'
require 'webauthn/attestation_statement/android_key'

RSpec.describe 'AppleAppAttest attestation' do
  before do
    WebAuthn.configuration.encoding = :base64
    allow(ENV).to receive(:fetch).with('IOS_ATTESTATION_APP_IDS', '').and_return(app_id)
  end

  describe '#valid?' do
    # rubocop:disable Layout/LineLength
    let(:attestation_string) do
      'o2NmbXRvYXBwbGUtYXBwYXR0ZXN0Z2F0dFN0bXSiY3g1Y4JZAvAwggLsMIICcqADAgECAgYBfH+GeLYwCgYIKoZIzj0EAwIwTzEjMCEGA1UEAwwaQXBwbGUgQXBwIEF0dGVzdGF0aW9uIENBIDExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcNMjExMDEzMTU1ODExWhcNMjExMDE2MTU1ODExWjCBkTFJMEcGA1UEAwxAMmQyNzY4M2NkMWM5NjhjZjUzMDc2MTI0MWJlNjY5NmZiZjk3ZWFmZGY4ZjNiZDdhZDgyMjA0YjI0NDA0Y2Y1MTEaMBgGA1UECwwRQUFBIENlcnRpZmljYXRpb24xEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARk4TuEkATDYW4ntTvUXYOylMLOngL/so+Svtg/VT5/+TiVhfZo/4DRPlRn/k25hUO2CXbTz4LG6fFs0WOjMgwho4H2MIHzMAwGA1UdEwEB/wQCMAAwDgYDVR0PAQH/BAQDAgTwMIGABgkqhkiG92NkCAUEczBxpAMCAQq/iTADAgEBv4kxAwIBAL+JMgMCAQG/iTMDAgEBv4k0KAQmOUs3ODZENFdHOC5jb20udGFzdHl3b3Jrcy5tb2JpbGUuZG91Z2ilBgQEc2tzIL+JNgMCAQW/iTcDAgEAv4k5AwIBAL+JOgMCAQAwGwYJKoZIhvdjZAgHBA4wDL+KeAgEBjE0LjcuMTAzBgkqhkiG92NkCAIEJjAkoSIEIOedRshNXzCoPwriX4LeNMY7i+JIp1KfssIU71F8WxQLMAoGCCqGSM49BAMCA2gAMGUCMQDQb9ZvorcasnH1uMjhHI1DjsDIvcgZpw1cKBqE5zxqDfUQts0i9NKBA1FnHeXZv+oCMBcOi2Mq2C4iGupyzSfOkO+4uQ6sxa9wQ6OqP+xsEJFVfJRgRr9VjAq5r0VWE44i5lkCRzCCAkMwggHIoAMCAQICEAm6xeG8QBrZ1FOVvDgaCFQwCgYIKoZIzj0EAwMwUjEmMCQGA1UEAwwdQXBwbGUgQXBwIEF0dGVzdGF0aW9uIFJvb3QgQ0ExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcNMjAwMzE4MTgzOTU1WhcNMzAwMzEzMDAwMDAwWjBPMSMwIQYDVQQDDBpBcHBsZSBBcHAgQXR0ZXN0YXRpb24gQ0EgMTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49AgEGBSuBBAAiA2IABK5bN6B3TXmyNY9A59HyJibxwl/vF4At6rOCalmHT/jSrRUleJqiZgQZEki2PLlnBp6Y02O9XjcPv6COMp6Ac6mF53Ruo1mi9m8p2zKvRV4hFljVZ6+eJn6yYU3CGmbOmaNmMGQwEgYDVR0TAQH/BAgwBgEB/wIBADAfBgNVHSMEGDAWgBSskRBTM72+aEH/pwyp5frq5eWKoTAdBgNVHQ4EFgQUPuNdHAQZqcm0MfiEdNbh4Vdy45swDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2kAMGYCMQC7voiNc40FAs+8/WZtCVdQNbzWhyw/hDBJJint0fkU6HmZHJrota7406hUM/e2DQYCMQCrOO3QzIHtAKRSw7pE+ZNjZVP+zCl/LrTfn16+WkrKtplcS4IN+QQ4b3gHu1iUObdncmVjZWlwdFkOZjCABgkqhkiG9w0BBwKggDCAAgEBMQ8wDQYJYIZIAWUDBAIBBQAwgAYJKoZIhvcNAQcBoIAkgASCA+gxggQfMC4CAQICAQEEJjlLNzg2RDRXRzguY29tLnRhc3R5d29ya3MubW9iaWxlLmRvdWdoMIIC+gIBAwIBAQSCAvAwggLsMIICcqADAgECAgYBfH+GeLYwCgYIKoZIzj0EAwIwTzEjMCEGA1UEAwwaQXBwbGUgQXBwIEF0dGVzdGF0aW9uIENBIDExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcNMjExMDEzMTU1ODExWhcNMjExMDE2MTU1ODExWjCBkTFJMEcGA1UEAwxAMmQyNzY4M2NkMWM5NjhjZjUzMDc2MTI0MWJlNjY5NmZiZjk3ZWFmZGY4ZjNiZDdhZDgyMjA0YjI0NDA0Y2Y1MTEaMBgGA1UECwwRQUFBIENlcnRpZmljYXRpb24xEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARk4TuEkATDYW4ntTvUXYOylMLOngL/so+Svtg/VT5/+TiVhfZo/4DRPlRn/k25hUO2CXbTz4LG6fFs0WOjMgwho4H2MIHzMAwGA1UdEwEB/wQCMAAwDgYDVR0PAQH/BAQDAgTwMIGABgkqhkiG92NkCAUEczBxpAMCAQq/iTADAgEBv4kxAwIBAL+JMgMCAQG/iTMDAgEBv4k0KAQmOUs3ODZENFdHOC5jb20udGFzdHl3b3Jrcy5tb2JpbGUuZG91Z2ilBgQEc2tzIL+JNgMCAQW/iTcDAgEAv4k5AwIBAL+JOgMCAQAwGwYJKoZIhvdjZAgHBA4wDL+KeAgEBjE0LjcuMTAzBgkqhkiG92NkCAIEJjAkoSIEIOedRshNXzCoPwriX4LeNMY7i+JIp1KfssIU71F8WxQLMAoGCCqGSM49BAMCA2gAMGUCMQDQb9ZvorcasnH1uMjhHI1DjsDIvcgZpw1cKBqE5zxqDfUQts0i9NKBA1FnHeXZv+oCMBcOi2Mq2C4iGupyzSfOkO+4uQ6sxa9wQ6OqP+xsEJFVfJRgRr9VjAq5r0VWE44i5jAoAgEEAgEBBCCyysUgfvwxeK1B/Dx40/rDnG6uf+JWwuT0zQRnvLzb2zBgAgEFAgEBBFhreERvaXlscllWR3dqUFo0MSttYlhLcjN0NDR3YzJrSEtZVEJ0bDA3ZVpxbGNzSFByZFd3ZHA0ZjZDVVpYU3BwMFk5eVltYlRXRytaejZpTGNOVDIwZz09MA4CAQYCAQEEBkFUVEVTVDAPAgEHAgEBBAdzYW5kYm94MCACAQwCAQEEBDsYMjAyMS0xMC0xNFQxNTo1ODoxMS42NzdaMCACARUCAQEEGDIwMjItMDEtMTJUMTU6NTg6MTEuNjc3WgAAAAAAAKCAMIIDrjCCA1SgAwIBAgIQWmMk9bZy2t8fhb5kN6oU4jAKBggqhkjOPQQDAjB8MTAwLgYDVQQDDCdBcHBsZSBBcHBsaWNhdGlvbiBJbnRlZ3JhdGlvbiBDQSA1IC0gRzExJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMTA1MDUwNDA3NTJaFw0yMjA2MDQwNDA3NTFaMFoxNjA0BgNVBAMMLUFwcGxpY2F0aW9uIEF0dGVzdGF0aW9uIEZyYXVkIFJlY2VpcHQgU2lnbmluZzETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQuxd7WO5w3Khzo9lnUcL6ACgu+unY5hELa5TGVzRdO22mxERF16L2nYy81z756qHovUNWW7K0Ei23gk+v3rKwSo4IB2DCCAdQwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBTZF/5LZ5A4S5L0287VV4AUC489yTBDBggrBgEFBQcBAQQ3MDUwMwYIKwYBBQUHMAGGJ2h0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDMtYWFpY2E1ZzEwMTCCARwGA1UdIASCARMwggEPMIIBCwYJKoZIhvdjZAUBMIH9MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDUGCCsGAQUFBwIBFilodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eTAdBgNVHQ4EFgQUgYIFHDboz52JHAUcf2be4RMg5VMwDgYDVR0PAQH/BAQDAgeAMA8GCSqGSIb3Y2QMDwQCBQAwCgYIKoZIzj0EAwIDSAAwRQIgRuXoU1t+BUqff/GPKjPW4bIZKlFkENd7KR8Gq5yLqRMCIQC4d5e0qEsxLnl9i1DjKNVBti3hl0GC8kfwlMbyis4LFjCCAvkwggJ/oAMCAQICEFb7g9Qr/43DN5kjtVqubr0wCgYIKoZIzj0EAwMwZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTkwMzIyMTc1MzMzWhcNMzQwMzIyMDAwMDAwWjB8MTAwLgYDVQQDDCdBcHBsZSBBcHBsaWNhdGlvbiBJbnRlZ3JhdGlvbiBDQSA1IC0gRzExJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJLOY719hrGrKAo7HOGv+wSUgJGs9jHfpssoNW9ES+Eh5VfdEo2NuoJ8lb5J+r4zyq7NBBnxL0Ml+vS+s8uDfrqjgfcwgfQwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+veuv2sskqzBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGGKmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDMtYXBwbGVyb290Y2FnMzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFwcGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAdBgNVHQ4EFgQU2Rf+S2eQOEuS9NvO1VeAFAuPPckwDgYDVR0PAQH/BAQDAgEGMBAGCiqGSIb3Y2QGAgMEAgUAMAoGCCqGSM49BAMDA2gAMGUCMQCNb6afoeDk7FtOc4qSfz14U5iP9NofWB7DdUr+OKhMKoMaGqoNpmRt4bmT6NFVTO0CMGc7LLTh6DcHd8vV7HaoGjpVOz81asjF5pKw4WG+gElp5F8rqWzhEQKqzGHZOLdzSjCCAkMwggHJoAMCAQICCC3F/IjSxUuVMAoGCCqGSM49BAMDMGcxGzAZBgNVBAMMEkFwcGxlIFJvb3QgQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE0MDQzMDE4MTkwNloXDTM5MDQzMDE4MTkwNlowZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASY6S89QHKk7ZMicoETHN0QlfHFo05x3BQW2Q7lpgUqd2R7X04407scRLV/9R+2MmJdyemEW08wTxFaAP1YWAyl9Q8sTQdHE3Xal5eXbzFc7SudeyA72LlU2V6ZpDpRCjGjQjBAMB0GA1UdDgQWBBS7sN6hWDOImqSKmd6+veuv2sskqzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAwNoADBlAjEAg+nBxBZeGl00GNnt7/RsDgBGS7jfskYRxQ/95nqMoaZrzsID1Jz1k8Z0uGrfqiMVAjBtZooQytQN1E/NjUM+tIpjpTNu423aF7dkH8hTJvmIYnQ5Cxdby1GoDOgYA+eisigAADGB/jCB+wIBATCBkDB8MTAwLgYDVQQDDCdBcHBsZSBBcHBsaWNhdGlvbiBJbnRlZ3JhdGlvbiBDQSA1IC0gRzExJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIQWmMk9bZy2t8fhb5kN6oU4jANBglghkgBZQMEAgEFADAKBggqhkjOPQQDAgRIMEYCIQCXNaHwrLKbuJbdVW3t0nhmR63buV2baQQ1Vupl3dc9dwIhAPhefvpBVchWl/W4yz+4+kObrcJIHNPiCXpTFKqWoK49AAAAAAAAaGF1dGhEYXRhWKThu6LN9wGTx6VhOgko+zw+1LXoAQkmOCpjwhysbMhMdEAAAAAAYXBwYXR0ZXN0ZGV2ZWxvcAAgLSdoPNHJaM9TB2EkG+Zpb7+X6v3487162CIEskQEz1GlAQIDJiABIVggZOE7hJAEw2FuJ7U71F2DspTCzp4C/7KPkr7YP1U+f/kiWCA4lYX2aP+A0T5UZ/5NuYVDtgl208+CxunxbNFjozIMIQ=='
    end
    # rubocop:enable Layout/LineLength
    let(:challenge) { 'rGhel7Wn31ih1d91k6g362lZuofvHyRwOw+TpPUBmUU=' }
    let(:key_id) { 'LSdoPNHJaM9TB2EkG+Zpb7+X6v3487162CIEskQEz1E=' }
    let(:app_id) { '9K786D4WG8.com.tastyworks.mobile.dough' }
    let(:credential) do
      WebAuthn::Credential.from_ios_attest(
        attestation_string: attestation_string,
        key_id: key_id,
        app_id: app_id,
        challenge: challenge
      )
    end
    let(:client_data_hash) { OpenSSL::Digest::SHA256.digest(challenge) }
    let(:authenticator_data) { credential.attestation_object.authenticator_data }

    it "works if everything's fine" do
      expect(credential.verify(challenge)).to be_truthy
    end
  end
end
